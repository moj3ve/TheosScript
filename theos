#!/bin/bash

final=0
finalpackage="n"
do=0
DO=""

x=$PWD

NC='\033[0m'                            # No Color.

VI='\033[0;95m'                         # Violet.
YE='\033[1;93m'                         # Yellow.
CYA='\033[0;96m'                        # Cyan.
GR='\033[0;32m'                         # Green.
BAD='\033[0;91m'                        # Strong red. For errors.

update()
{
    theos=$THEOS
    echo -e "${CYA}THEOS${NC}"
    cd $theos || exit
    fakeroot git pull
    fakeroot git submodule update --init --recursive
    echo -e "${CYA}SDKs${NC}"
    cd $theos/sdks || exit
    fakeroot git pull
    fakeroot git submodule update --init --recursive
    echo -e "${CYA}COMMAND${NC}"
    cd $HOME/theosscript || exit
    git pull
    git submodule update --init --recursive
    cd $x || exit
    echo ""
}

usage()
{
    echo ""
    echo -e "${CYA}THEOS${NC}"
    echo -e "${YE}usage: theos [commands]${NC}"
    echo ""
    echo -e "${CYA}BUILDING${NC}"
    echo -e "${VI}b | build${NC} | Builds a package. (Put any build commands **before** the b flag (i.e. theos final do build))"
    echo ""
    echo -e "${CYA}MISC${NC}"
    echo -e "${VI}ch | checkra1n${NC} | Opens checkra1n."
    echo ""
    echo -e "${VI}s | ssh${NC} | SSH to the IP that you selected."
    echo ""
    echo -e "${VI}r | respring${NC} | Resprings on your development device."
    echo ""
    echo -e "${VI}dr | devicerun${NC} | Runs selected command on your development device."
    echo ""
    echo -e "${VI}rl | rlog${NC} | Opens RLog."
    echo ""
    echo -e "${CYA}CONFIG${NC}"
    echo -e "${VI}u | update${NC} | Updates Theos."
    echo ""
    echo -e "${VI}n | nic${NC} | Runs nic.pl." 
    echo ""
    echo -e "${VI}v | version${NC} | Displays the script's version."
    echo ""
    echo -e "${CYA}INSTALL${NC}"
    echo -e "${VI}cl | clang${NC} | Installs the latest clang toolchain."
    echo ""
    echo -e "${VI}inst | install${NC} | Installs Theos."
    echo ""
}

checkra1n()
{
    fakeroot checkra1n
}

install()
{
    echo -e "${CYA}Instantiating variables...${NC}"
    distr=$(uname -s)
    if [ $THEOS != "" ]; then
        theos=$THEOS
        fakeroot rm -rf $theos
        restart=0
    else
        if [ "$distr" == "Darwin" ]; then 
            echo "export THEOS=~/theos" >> ~/.zprofile
            echo "export THEOS=~/theos" >> ~/.zshrc
        else 
            echo "export THEOS=~/theos" >> ~/.profile
            echo "export THEOS=~/theos" >> ~/.bashrc
        fi
        restart=1
    fi
    echo -e "${CYA}Cloning theos...${NC}"
    git clone --recursive https://github.com/theos/theos.git $HOME/theos
    rm -rf $HOME/theos/sdks
    echo -e "${CYA}Getting toolchain...${NC}"
    cd $HOME
    curl -LO https://github.com/sbingner/llvm-project/releases/download/v10.0.0-1/linux-ios-arm64e-clang-toolchain.tar.lzma
    tar -xvf $HOME/linux-ios-arm64e-clang-toolchain.tar.lzma
    fakeroot mkdir -p $HOME/theos/toolchain/linux/iphone
    fakeroot mv ios-arm64e-clang-toolchain/* $HOME/theos/toolchain/linux/iphone
    rm -rf ios-arm64e-clang-toolchain
    rm -rf linux-ios-arm64e-clang-toolchain.tar.lzma
    echo -e "${CYA}Getting SDKs...${NC}"
    git clone https://github.com/xybp888/iOS-SDKS $HOME/theos/sdks
    cd $x
    if [ $restart == 1 ]; then
        echo -e "${CYA}Installation is done. In order for the theos variable to take place, you must restart your terminal.${NC}"
    else
        echo -e "${CYA}Installation is done.${NC}"
    fi
}

if [ "$1" == "" ]; then
  usage
  exit
fi

while [ "$1" != "" ]; do
    case $1 in
        u | update)
        update
        ;;
        ch | checkra1n)         
        checkra1n || echo "Checkra1n could not open because you do not have it installed."
        ;;
        n | nic)                
        $THEOS/bin/nic.pl
        ;;
        dr | devicerun )        
        ssh root@$DRBIP "$*"
        ;;
        b | build)
        shift
        make package $*
        exit
        ;;
        cl | clang)             
        fakeroot bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        ;;
        inst | install)         
        install
        ;;
        s | ssh)                
        ssh mobile@$THEOS_DEVICE_IP > /dev/null 2>&1 || echo "SSH could not open because THEOS_DEVICE_IP is not set up."
        exit
        ;;
        r | respring)           
        ssh root@$THEOS_DEVICE_IP "killall SpringBoard" > /dev/null 2>&1 || echo "SSH could not open because THEOS_DEVICE_IP is not set up."
        ;;
        v | version)            
        echo -e "${CYA}VERSION${NC}" && echo -e "${YE}1.0.1${NC}"
        ;;
        rl | rlog)              
        python $HOME/theosscript/rlogserver.py
        ;;
        * )                     
        usage
        exit 1
    esac
    shift
done
